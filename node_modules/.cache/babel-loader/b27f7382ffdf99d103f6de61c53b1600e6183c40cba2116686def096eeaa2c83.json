{"ast":null,"code":"var _jsxFileName = \"D:\\\\F4 Module\\\\AuthenticationDummyF4Contest2\\\\src\\\\login.js\",\n  _s = $RefreshSig$();\nimport { Button, Form, Input } from \"antd\";\nimport React from 'react';\nimport { useState } from \"react\";\n//import ReactDOM from 'react-dom/client';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Login = ({\n  auth\n}) => {\n  _s();\n  const [apiStatus, setApiStatus] = useState(\"init\");\n  const onSubmitForm = async loginInfo => {\n    // loginInfo = {email, password}\n    setApiStatus(\"pending\");\n    const {\n      success\n    } = await auth.loginUser(loginInfo);\n    setApiStatus(success ? \"success\" : \"error\");\n  };\n  return /*#__PURE__*/_jsxDEV(Form, {\n    onFinish: onSubmitForm,\n    layout: \"vertical\",\n    children: [/*#__PURE__*/_jsxDEV(Form.Item, {\n      label: \"Email\",\n      name: \"email\",\n      rules: [{\n        type: \"email\",\n        message: \"Please enter valid email\"\n      }, {\n        required: true,\n        message: \"Please enter email\"\n      }],\n      children: /*#__PURE__*/_jsxDEV(Input, {\n        placeholder: \"Enter Email\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 16\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Form.Item, {\n      label: \"Password\",\n      name: \"password\",\n      rules: [{\n        required: true,\n        message: \"Password is required\"\n      }, {\n        type: \"password\",\n        message: \"Please enter valid password\"\n      }],\n      children: /*#__PURE__*/_jsxDEV(Input, {\n        placeholder: \"Enter password\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      htmlType: \"submit\",\n      type: \"primary\",\n      children: \"Click Me\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 21,\n    columnNumber: 9\n  }, this);\n};\n_s(Login, \"HRKtdITiId5t8KP6YALQyQpoHFY=\");\n_c = Login;\nexport default Login;\nvar _c;\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"names":["Button","Form","Input","React","useState","jsxDEV","_jsxDEV","Login","auth","_s","apiStatus","setApiStatus","onSubmitForm","loginInfo","success","loginUser","onFinish","layout","children","Item","label","name","rules","type","message","required","placeholder","fileName","_jsxFileName","lineNumber","columnNumber","htmlType","_c","$RefreshReg$"],"sources":["D:/F4 Module/AuthenticationDummyF4Contest2/src/login.js"],"sourcesContent":["import { Button, Form, Input } from \"antd\";\r\nimport React from 'react';\r\nimport { useState } from \"react\";\r\n//import ReactDOM from 'react-dom/client';\r\n\r\n\r\nconst Login = ({auth}) =>\r\n{\r\n\r\n    const [apiStatus, setApiStatus] = useState(\"init\");\r\n\r\n    const onSubmitForm = async (loginInfo) => {\r\n    // loginInfo = {email, password}\r\n    setApiStatus(\"pending\");\r\n    const { success } = await auth.loginUser(loginInfo);\r\n    setApiStatus(success ? \"success\" : \"error\");\r\n  };\r\n\r\n    return(\r\n        \r\n        <Form onFinish={onSubmitForm} layout=\"vertical\">\r\n            <Form.Item\r\n                label=\"Email\"\r\n                name=\"email\"\r\n                rules={[\r\n                    {type: \"email\", message: \"Please enter valid email\"},\r\n                    {required: true, message: \"Please enter email\"},\r\n                ]}\r\n            >\r\n               <Input placeholder=\"Enter Email\"/>\r\n            </Form.Item>\r\n\r\n            <Form.Item\r\n                label=\"Password\"\r\n                name=\"password\"\r\n                rules={[\r\n                    {required: true, message: \"Password is required\"},\r\n                    {type: \"password\", message: \"Please enter valid password\"}\r\n                ]}       \r\n            >\r\n                <Input placeholder=\"Enter password\"/>\r\n            </Form.Item>\r\n\r\n            <Button htmlType=\"submit\" type=\"primary\">Click Me</Button>\r\n        </Form>\r\n    )\r\n}\r\n\r\nexport default Login"],"mappings":";;AAAA,SAASA,MAAM,EAAEC,IAAI,EAAEC,KAAK,QAAQ,MAAM;AAC1C,OAAOC,KAAK,MAAM,OAAO;AACzB,SAASC,QAAQ,QAAQ,OAAO;AAChC;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAGA,MAAMC,KAAK,GAAGA,CAAC;EAACC;AAAI,CAAC,KACrB;EAAAC,EAAA;EAEI,MAAM,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAGP,QAAQ,CAAC,MAAM,CAAC;EAElD,MAAMQ,YAAY,GAAG,MAAOC,SAAS,IAAK;IAC1C;IACAF,YAAY,CAAC,SAAS,CAAC;IACvB,MAAM;MAAEG;IAAQ,CAAC,GAAG,MAAMN,IAAI,CAACO,SAAS,CAACF,SAAS,CAAC;IACnDF,YAAY,CAACG,OAAO,GAAG,SAAS,GAAG,OAAO,CAAC;EAC7C,CAAC;EAEC,oBAEIR,OAAA,CAACL,IAAI;IAACe,QAAQ,EAAEJ,YAAa;IAACK,MAAM,EAAC,UAAU;IAAAC,QAAA,gBAC3CZ,OAAA,CAACL,IAAI,CAACkB,IAAI;MACNC,KAAK,EAAC,OAAO;MACbC,IAAI,EAAC,OAAO;MACZC,KAAK,EAAE,CACH;QAACC,IAAI,EAAE,OAAO;QAAEC,OAAO,EAAE;MAA0B,CAAC,EACpD;QAACC,QAAQ,EAAE,IAAI;QAAED,OAAO,EAAE;MAAoB,CAAC,CACjD;MAAAN,QAAA,eAEHZ,OAAA,CAACJ,KAAK;QAACwB,WAAW,EAAC;MAAa;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAC;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC1B,CAAC,eAEZxB,OAAA,CAACL,IAAI,CAACkB,IAAI;MACNC,KAAK,EAAC,UAAU;MAChBC,IAAI,EAAC,UAAU;MACfC,KAAK,EAAE,CACH;QAACG,QAAQ,EAAE,IAAI;QAAED,OAAO,EAAE;MAAsB,CAAC,EACjD;QAACD,IAAI,EAAE,UAAU;QAAEC,OAAO,EAAE;MAA6B,CAAC,CAC5D;MAAAN,QAAA,eAEFZ,OAAA,CAACJ,KAAK;QAACwB,WAAW,EAAC;MAAgB;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAC;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC9B,CAAC,eAEZxB,OAAA,CAACN,MAAM;MAAC+B,QAAQ,EAAC,QAAQ;MAACR,IAAI,EAAC,SAAS;MAAAL,QAAA,EAAC;IAAQ;MAAAS,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACxD,CAAC;AAEf,CAAC;AAAArB,EAAA,CAxCKF,KAAK;AAAAyB,EAAA,GAALzB,KAAK;AA0CX,eAAeA,KAAK;AAAA,IAAAyB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}