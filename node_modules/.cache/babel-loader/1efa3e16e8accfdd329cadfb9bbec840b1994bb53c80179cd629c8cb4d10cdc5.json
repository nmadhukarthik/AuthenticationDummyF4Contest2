{"ast":null,"code":"var _jsxFileName = \"D:\\\\F4 Module\\\\AuthenticationDummyF4Contest2\\\\src\\\\login.js\",\n  _s = $RefreshSig$();\nimport { Alert, Button, Form, Input } from \"antd\";\nimport React from 'react';\nimport { useState } from \"react\";\nimport Auth from \"./A\";\n//import ReactDOM from 'react-dom/client';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Login = ({}) => {\n  _s();\n  const [apiStatus, setApiStatus] = useState(\"init\");\n  const onSubmitForm = async loginInfo => {\n    // loginInfo = {email, password}\n    setApiStatus(\"pending\");\n    const {\n      success\n    } = await auth.loginUser(loginInfo);\n    setApiStatus(success ? \"success\" : \"error\");\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [apiStatus = \"success\" && /*#__PURE__*/_jsxDEV(Alert, {\n      type: \"success\",\n      showIcon: true,\n      message: \"Logged in successfully..\",\n      closable: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 13\n    }, this), apiStatus = \"error\" && /*#__PURE__*/_jsxDEV(Alert, {\n      type: \"error\",\n      showIcon: true,\n      message: \"Invalid credentials\",\n      closable: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Form, {\n      onFinish: onSubmitForm,\n      layout: \"vertical\",\n      children: [/*#__PURE__*/_jsxDEV(Form.Item, {\n        label: \"Email\",\n        name: \"email\",\n        rules: [{\n          type: \"email\",\n          message: \"Please enter valid email\"\n        }, {\n          required: true,\n          message: \"Please enter email\"\n        }],\n        children: /*#__PURE__*/_jsxDEV(Input, {\n          placeholder: \"Enter Email\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 16\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(Form.Item, {\n        label: \"Password\",\n        name: \"password\",\n        rules: [{\n          required: true,\n          message: \"Password is required\"\n        }, {\n          type: \"password\",\n          message: \"Please enter valid password\"\n        }],\n        children: /*#__PURE__*/_jsxDEV(Input, {\n          placeholder: \"Enter password\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        htmlType: \"submit\",\n        type: \"primary\",\n        children: \"Click Me\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 21,\n    columnNumber: 9\n  }, this);\n};\n_s(Login, \"HRKtdITiId5t8KP6YALQyQpoHFY=\");\n_c = Login;\nexport default Login;\nvar _c;\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"names":["Alert","Button","Form","Input","React","useState","Auth","jsxDEV","_jsxDEV","Login","_s","apiStatus","setApiStatus","onSubmitForm","loginInfo","success","auth","loginUser","children","type","showIcon","message","closable","fileName","_jsxFileName","lineNumber","columnNumber","onFinish","layout","Item","label","name","rules","required","placeholder","htmlType","_c","$RefreshReg$"],"sources":["D:/F4 Module/AuthenticationDummyF4Contest2/src/login.js"],"sourcesContent":["import { Alert, Button, Form, Input } from \"antd\";\r\nimport React from 'react';\r\nimport { useState } from \"react\";\r\nimport Auth from \"./A\"\r\n//import ReactDOM from 'react-dom/client';\r\n\r\n\r\nconst Login = ({}) =>\r\n{\r\n\r\n    const [apiStatus, setApiStatus] = useState(\"init\");\r\n\r\n    const onSubmitForm = async (loginInfo) => {\r\n    // loginInfo = {email, password}\r\n    setApiStatus(\"pending\");\r\n    const { success } = await auth.loginUser(loginInfo);\r\n    setApiStatus(success ? \"success\" : \"error\");\r\n  };\r\n\r\n    return(\r\n        <div>\r\n        {apiStatus = \"success\" && (\r\n            <Alert\r\n              type=\"success\"\r\n              showIcon\r\n              message=\"Logged in successfully..\"\r\n              closable\r\n            />\r\n          )}\r\n          {apiStatus = \"error\" && (\r\n            <Alert type=\"error\" showIcon message=\"Invalid credentials\" closable />\r\n          )}\r\n        <Form onFinish={onSubmitForm} layout=\"vertical\">\r\n            <Form.Item\r\n                label=\"Email\"\r\n                name=\"email\"\r\n                rules={[\r\n                    {type: \"email\", message: \"Please enter valid email\"},\r\n                    {required: true, message: \"Please enter email\"},\r\n                ]}\r\n            >\r\n               <Input placeholder=\"Enter Email\"/>\r\n            </Form.Item>\r\n\r\n            <Form.Item\r\n                label=\"Password\"\r\n                name=\"password\"\r\n                rules={[\r\n                    {required: true, message: \"Password is required\"},\r\n                    {type: \"password\", message: \"Please enter valid password\"}\r\n                ]}       \r\n            >\r\n                <Input placeholder=\"Enter password\"/>\r\n            </Form.Item>\r\n\r\n            <Button htmlType=\"submit\" type=\"primary\">Click Me</Button>\r\n        </Form>\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Login"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}